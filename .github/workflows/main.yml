name: CI

env:
  RELEASE_NAME: repo

on:
  push:
    branches: master

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:base-devel
      options: --privileged
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup
    steps:
      - name: Download repository database
        run: |
          mkdir /repository
          cd /repository
          curl -fL --remote-name-all "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/download/repo/"{custom.db.tar.gz,custom.files.tar.gz} || repo-add custom.db.tar.gz
          ln -sf /repository/custom.db.tar.gz /repository/custom.db
          ln -sf /repository/custom.files.tar.gz /repository/custom.files

      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare environment
        run: |
          cat << EOF >> "$GITHUB_WORKSPACE/pacman.conf"
          [custom]
          SigLevel = Required DatabaseOptional
          Server = file:///repository
          Server = $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/download/current
          EOF

          mv "$GITHUB_WORKSPACE/pacman.conf" /etc/pacman.conf
          mv "$GITHUB_WORKSPACE/aur-graph" /usr/bin/

          pacman-key --init
          pacman -Syu git expac devtools --noconfirm

          useradd -m -G wheel -s /bin/bash build
          echo "%wheel ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/00_wheel
          #chown -Rh build:build /repository

          mkdir -p /home/build/.gnupg
          echo "keyserver-options auto-key-retrieve" > /home/build/.gnupg/gpg.conf
          echo "keyserver hkps://keys.openpgp.org" >> /home/build/.gnupg/gpg.conf
          chown -Rh build:build /home/build/.gnupg/

          dbus-uuidgen --ensure=/etc/machine-id

          sed -i "s/en_US de_DE/en_US/g" /usr/bin/mkarchroot

          CHROOT=/buildchroot
          mkdir $CHROOT
          mkarchroot -C /etc/pacman.conf $CHROOT/root base-devel

      - name: Import GPG Key
        run: |
          printf "%s" "$repo_key" | gpg --import
          (echo 5; echo y; echo save) |
            gpg --command-fd 0 --no-tty --no-greeting -q --edit-key "$(
            gpg --list-packets <key.asc |
            awk '$1=="keyid:"{print$2;exit}')" trust
        env:
          repo_key: ${{ secrets.REPO_KEY }}

      - name: Build Arch Linux Package(s)
        run: |
          chown -Rh build:build $GITHUB_WORKSPACE
          cd $GITHUB_WORKSPACE
          ./build.sh
          rm -f /repository/*.old /repository/{custom.db,custom.files}

      - name: Upload package artefact(s)
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          tag: ${{env.RELEASE_NAME}}
          file: '/repository/*'
          file_glob: true
          overwrite: true
